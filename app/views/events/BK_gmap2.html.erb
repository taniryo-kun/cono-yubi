<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
 <head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script src="http://www.google.com/uds/api?file=uds.js&amp;v=1.0&amp;key=AIzaSyB1g0nXJgt_RBH35_YJ_Ap2CBqJ-kPWRbc" type="text/javascript"></script>
  <script type="text/javascript" src="http://www.google.com/jsapi"></script>
  <%= javascript_include_tag "gmap_gucci" %>
  <style type="text/css">
   html, body{
    height:100%;
    margin:0;
   }
   #map_canvas{
    height:100%;
    width:100%;
   }
   #resultsCanvas{
    position:absolute;
    height:20%;
    width:95%;
	left:0px;
	top:291px;
	z-index:5;
   }
  </style>
  <script type="text/javascript">
  //実行できないのは順番の問題かも知れない！！
   //google.load can download automatically download newest version 'maps api'
   google.load('maps','3',{other_params:'sensor=false'}); 
   google.load('search','1');
   
   //we take this function from google api
   //start google api Local Search
   function OnLoad(){
     var sc = new RawSearchControl();
   }
   
   function RawSearchControl(){
     this.searcherFormDiv = document.getElementById("searcher");
	 this.results = document.getElementById("results");
	 this.searchformDiv = decument.GetElementByKd("searchform");
	 this.searcher = new google.search.LocalSearch();
	 this.searcher.setCenterPoint("Tokyo, Japan");
	 this.sercher.setSearchCompleteCallback(this,
	   RawSearchControl.protorype.searchComplete,
	   [this.searcher]
	 );
	 
	 //now, create a search form and wire up a submit and clear handler
	 this.searchForm = new google.search.SearchForm(true, this.searchFormDiv);
	 this.searchForm.setOnSubmitCallback(this,
	   RawSearchControl.prototype.onSubmit);
	 this.searchForm.setOnClearCallback(this,
	   RawSearchControl.prototype.onClear);
	   
	 //demonstrate computeStaticMapUrl with simple point array
	 this.worldPointsUrl = GlocalSearch.computeStaticMapUrl(worldPoints, 350, 400);
	 document.getElementById("resultsImg").src = this.worldPointsUrl;
   }
   
   RawSearchControl.prototype.onSubmit = function(form){
     if (form.input.value){
	   this.searcher.execute(form.input.value);
	 }
	 
	 return false;
   }
   
   RawSearchControl.prototype.onClear = function(form){
     this.clearResults();
	 document.getElementById("resultsImg").src = this.worldPointsUrl;
	 form.input.value = "";
   }
   
   RawSearchControl.prototype.execute = function(q){
     this.searchForm.input.value = q;
	 this.searcher.execute(q);
   }
   
   RawSearchControl.prototype.searchComplete = function(searcher){
     //always clear old from the page
	 this.clearResults();
	 
	 //if the searcher has results then process them
	 if (searcher.results && searcher.results.length > 0){
	   
	   //now manually generate the html that we disabled
	   //initially and display it
	   for (var i=0; i<searcher.results.length; i++){
	     var result =searcher.results[i];
		 div = result.html.cloneNode(true);
		 
		 //create a static map image for this result
		 var img = decument.createElement("img");
		 GlocalSearch.resizeStaticMapUrl(result, 80, 120);
		 img.src = result.staticMapUrl;
		 img.title = result.titleNoFormatting;
		 
		 //now hyperlink the image
		 //and then insert it into a float-left div
		 
		 var a = document.createElement("a");
		 a.className = "static-map";
		 a.href = result.url;
		 a.appendChild(img);
		 
		 var fdiv = createDiv(null,"static-map");
		 fdiv.appendChild(a);
		 this.results.appendChild(fdiv);
		 this.results.appendChild(div);
		 
		 var breaker = crateDiv(null,"breaker");
		 this.results.appendChild(breaker);
	   }
	   
	   //create an image url for all the results
	   var imageUrl = GlocalSearch.computeStaticMapUrl(searcher.results, 350, 400);
	   document.getElementById("resultsImg").src = imageUrl;
	 }
   }
   
   RawSearchControl.prototype.clearResults = function(){
     removeChildren(this.results);
   }
   
   function removeChildren(parent){
     while(parent.firstChild){
	   parent.removeChild(parent.firstChild);
	 }
   }
   
   function createDiv(opt_text, opt_className){
     return el;
   }
   
   var worldPoints = [
     {lat : 48.8565, lng : 2.3509}, //paris
   ];
   //end google api Local Search

   //start google maps api MarkerMap
   var map;
   function initialize(){
     var mapDiv = document.getElementById('map-canvas');
	 map = new google.maps.Map(mapDiv, {
	   center: new google.maps.LatLng(37.4419, -122.1419),
	   zoom: 14,
	   mapTypeId: google.maps.MapTypeId.ROADMAP
	 });
	 
	 google.maps.event.addListenerOnce(map, 'tilesloaded', addMarkers);
   }
   
   function addMarkers(){
     var bounds =map.getBounds();
	 var southWest = bounds.getSouthWest();
	 var northEast = bounds.getNorthEast();
	 var lngSpan = northEast.lng() - southWest.lng();
	 var latSpan = northEast.lat() - southWest.lat();
	 for (var i = 0; i < 10; i++){
	   var latLng = new google.maps.LatLng(southWest.lat() + latSpan * Math.random(),
										   southWest.lng() + lngSpan * Math.random());
       var marker = new google.maps.Marker({
	     position: latLng,
		 map: map
	   });
	 }
	 //define the contents of information window
     var iwopts = {
       content: "<%= @event.event_place %>",
       position: m_latlng
     };
     //create infowindow to open on the marker
     infowindow=new google.maps.InfoWindow(iwopts);
     infowindow.open(map, marker); 
   }
   //google.maps.event.addDomListener(window, 'load', initialize);
  </script>
 </head>
 <body onload="initialize()">
 <!--<div id="resultsCanvas"></div>-->
  <div id="map_canvas"></div>
 </body>
</html>